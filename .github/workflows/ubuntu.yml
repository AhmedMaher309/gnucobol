name: Ubuntu Workflow

on:
  pull_request:
    branches: [ gcos4gnucobol-3.x ]
  push:
    branches: [ gcos4gnucobol-3.x ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        include:
          - os: ubuntu-latest
            skip_test: true

    runs-on: ${{ matrix.os }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install packages
        run: |
          sudo apt-get install automake libtool libdb5.3-dev help2man gettext texlive

      - name: Set git user
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions-bot@users.noreply.github.com

      - name: bootstrap
        run: |
          ./build_aux/bootstrap

      # FIXME: With TERM="dumb" `make check` fails with:
      # ...
      # 571: ACCEPT OMITTED (SCREEN)                         FAILED (run_accept.at:307)
      # ...
      # 693: ON EXCEPTION clause of DISPLAY                  FAILED (run_misc.at:6335)
      # 695: LINE/COLUMN 0 exceptions                        FAILED (run_misc.at:6414)
      # 694: EC-SCREEN-LINE-NUMBER and -STARTING-COLUMN      FAILED (run_misc.at:6376)
      # ...
      # Failure cases read: "Error opening terminal: unknown." on
      # stderr, and exit with code 1.
      # 
      # Another alternative is passing `--with-curses=no` to the
      # configure script, yet distcheck does call configure too...
      # 
      - name: Build environment setup
        run: |
          mkdir _build
          export TERM="vt100"
          echo "TERM=$TERM" >> $GITHUB_ENV

      - name: configure
        run: |
          cd _build
          ../configure --enable-cobc-internal-checks --enable-debug --prefix /opt/cobol/gnucobol-gcos --exec-prefix /opt/cobol/gnucobol-gcos

      - name: make
        run: |
          cd _build
          make --jobs=$(($(nproc)+1))

      # - name: check
      #   run: |
      #     cd _build
      #     make check TESTSUITEFLAGS="--jobs=$(($(nproc)+1))"

      - name: distcheck
        run: |
          cd _build
          make distcheck TESTSUITEFLAGS="--jobs=$(($(nproc)+1))"

      - name: Cache newcob.val.Z
        uses: actions/cache@v3
        id: newcob
        with:
          path: _build/tests/cobol85/newcob.val.Z.cached
          key: newcob

      - name: Download newcob.val.Z
        if: steps.newcob.outputs.cache-hit != 'true'
        run: |
          cd _build/tests/cobol85
          make newcob.val.Z
          ln -f newcob.val.Z newcob.val.Z.cached

      - name: NIST85 Test Suite
        run: |
          cd _build/tests/cobol85
          ln -f newcob.val.Z.cached newcob.val.Z
          make EXEC85 && make --jobs=$(($(nproc)+1)) test

      - name: install
        run: |
          cd _build
          make install
